{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 CenturyGothic;\f1\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh6500\viewkind0
\deftab720
\pard\pardeftab720\ri0\qj

\f0\fs24 \cf0 Lee-Won Fulbright\
\
Part One\
\
Kip\
\pard\pardeftab720\ri0

\f1 \cf0 \

\f0 If you have ever wanted to take care of a small pet without the large amount of mess, time investment, and money, Kip is your answer! Beginning its life by hatching from an egg, just like a real chicken would (but without the wait!), Kip grows through being fed food and water. Kip's animations are what make it so engaging and lively\'97the baby chick really becomes your own! As you care for Kip into its swift adulthood, you can finally enjoy the fruits of your (not so arduous) labor, when the cycle begins all over again. Kip is meant to be a short and sweet way to experience a virtual pet. \
\
Part Two\
\
The most difficult part of my project was making the animations. This is because it was the most time consuming. I drew out (on the meggy template) how I wanted the chicken to move in each stage of its life many times, and this was often frustrating because I was being a perfectionist about how I wanted Kip to look. The second most difficult part was coding the arrays. After I got the arrays to work, the second I tried to do other stuff with them (like display important animations), the arrays got buggy. I have one working array in my code, which is when the chicken "goes ghost". The chicken ascends a little, but it's supposed to go completely off the screen. However, what was surprising was how much I liked the animations after finishing my project. I was satisfied with the movement of the chicken, and even though the array doesn't display the way I wanted it to, I think the visuals of came out better than expected. \
\
Working with others gave me a lot of good input as to how my project would look. If something didn't really look right or the colors needed some tweaking, my classmates gave me good advice. All of the contributions I received helped a lot in the enhancement of the playing (especially Elana, who was always giving me suggestions for how to improve my animations).  Also, being able to go the teacher for help for coding the arrays was very helpful and reassuring. \
\
Besides the array that I already explained, I don't think there are any other bugs. \
\
If I had more time to work on this project, I would add sound. A lot of the tones that I tried to use didn't sound good to me, so I didn't add them. However, with more time, I would experiment more to discover nicer sounding tones that would fit the sounds I think Kip would make. I would also add more interaction that is necessary to level up the chicken (such as playing with it with the arrow buttons). I would have liked to spend more time creating new, cute animations by doing that, and I think it would add more engagement and attachment to Kip. A lot of comments on my project were saying that I should add ways to die or win (which I had thought of doing in the beginning of my project as well). But, after working on the code for a while, I decided I didn't want to make it a game that requires a lot of concentration and patience. I just wanted a short interaction that lets you appreciate the animations, without having to do them over and wait a lot (which, in my opinion, becomes tedious and takes away from the enjoyment of it). So, I think instead of calling my project a game, it is more of an interaction or a chicken simulator (even if chicken simulator sounds a bit silly). \
\
I learned that a lot of what makes a good project or code are the animations and how the art/design looks aesthetically. Although knowing how to write code is extremely important and useful, knowing how to display your code in the form of the design of your project/game is even more important, because it is what the 
\i player
\i0  sees and interacts with. If the project is visually pleasing, the player/user will usually enjoy it more, even if the project is fairly simple. Of course, better code will usually make the visuals better as well. This applies to not only coded games and interactive projects, but also many other things in life such as schoolwork (how neat your homework is for example), food presentation (food can taste better when it looks nicer), and mostly how you present yourself (through both your appearance and actions). If you have good code (or writing, ingredients, or substance, whatever is internal), you will usually have pleasing outwards and visual results that play a big role in how the whole is viewed. \
}